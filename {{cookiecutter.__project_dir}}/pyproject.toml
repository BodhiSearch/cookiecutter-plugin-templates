[tool.poetry]
name = "{{ cookiecutter.project_slug}}"
version = "0.1.0"
description = "{{ cookiecutter.project_short_description }}"
{% if cookiecutter.email -%}
authors = ["{{ cookiecutter.full_name | default('') }}{{ ' <' + cookiecutter.email + '>' if cookiecutter.email else '' }}"]
{% else -%}
authors = []
{% endif -%}
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.8.1,<3.12"
bodhisearch = "^0.1.0"

[tool.poetry.group.test.dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
pytest-socket = "^0.6.0"
pytest-dotenv = "^0.5.2"

[tool.poetry.group.dev.dependencies]
black = "^23.7.0"
pre-commit = "^3.3.3"
flake8 = "^6.1.0"
mypy = "^1.4.1"
ruff = "^0.0.284"

[tool.poetry.group.docs.dependencies]
sphinx-nested-apidoc = "^1.2.4"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["tests_{{ cookiecutter.project_slug }}"]
filterwarnings = ["error"]
markers = [
  "all: tagged on all tests using hooks in conftest.py",
  "live: calls external APIs (skipped by default)",
]
addopts = '-m "not live"'
env_files = [".env.test"]


[tool.poetry.plugins.bodhisearch]
{{ cookiecutter.project_slug }} = "{{ cookiecutter.project_slug }}.llm"

[tool.black]
line-length = 120
target-version = ['py38']
preview = true
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | docs
)/
'''

[tool.mypy]
python_version = 3.8
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true
ignore_missing_imports = true
disallow_incomplete_defs = true
exclude = ["docs"]

[tool.ruff]
target-version = "py38"
select = ["E", "F", "B"]
ignore = []
fixable = ["ALL"]
unfixable = []
exclude = [
  ".bzr",
  ".direnv",
  ".eggs",
  ".git",
  ".git-rewrite",
  ".hg",
  ".mypy_cache",
  ".nox",
  ".pants.d",
  ".pytype",
  ".ruff_cache",
  ".svn",
  ".tox",
  ".venv",
  "__pypackages__",
  "_build",
  "buck-out",
  "build",
  "dist",
  "node_modules",
  "venv",
  "docs",
]
per-file-ignores = {}
line-length = 120
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
fix = true
